services:
  redis:
    image: redis:7
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  db:
    image: postgres:16
    env_file: [.env]
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 30

  vote:
    build: ./vote
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    environment:
      REDIS_HOST: redis
    ports: ["5000:80"]   # vote container listens on 80 in the sample

  worker:
    build: ./worker
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    environment:
      REDIS_HOST: redis
      POSTGRES_HOST: db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  result:
    build: ./result
    depends_on:
      db: { condition: service_healthy }
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: ["5001:80"]   # result container listens on 80 in the sample

volumes:
  pgdata:
